language: node_js
node_js:
    - '10.16.0'
cache:
  yarn: true
  directories:
    - node_modules
branches:
  only:
    - master
services:
  - postgresql
before_install:
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.16.0
  - export PATH="$HOME/.yarn/bin:$PATH"
install:
  - yarn install --frozen-lockfile
deploy:
- provider: s3
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  local_dir: dpl_cd_upload
  skip_cleanup: true
  on: &2
  repo: seiu503/member-app-2019
  bucket: code-deploy-builds
  region: us-west-2
- provider: codedeploy
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  bucket: code-deploy-builds
  key: latest.zip
  bundle_type: zip
  application: seiu503MemberApp2019
  deployment_group: seiu503MemberApp2019-DepGroup
  region: us-west-2
  on: *2
before_script:
  - psql -c 'create database seiu503_member_app_test;' -U postgres
  - psql -c "CREATE USER seiu503_member_app_test WITH PASSWORD 'seiu503_member_app_test';" -U postgres
  - psql -c 'GRANT ALL PRIVILEGES ON DATABASE seiu503_member_app_test TO seiu503_member_app_test;' -U postgres
script:
  - knex migrate:latest --env testing
  - yarn test
  - cd client && yarn install
  - yarn test
  - cd ..
  - zip -r latest *
  - mkdir -p dpl_cd_upload
  - mv latest.zip dpl_cd_upload/latest.zip